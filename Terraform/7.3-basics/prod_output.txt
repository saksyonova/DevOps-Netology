Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
   create

Terraform will perform the following actions:

  # yandex_compute_instance.vm-count[0] will be created
   resource "yandex_compute_instance" "vm-count" {
       created_at                = (known after apply)
       folder_id                 = (known after apply)
       fqdn                      = (known after apply)
       hostname                  = (known after apply)
       id                        = (known after apply)
       name                      = "vm-0-prod"
       network_acceleration_type = "standard"
       platform_id               = "standard-v1"
       service_account_id        = (known after apply)
       status                    = (known after apply)
       zone                      = (known after apply)

       boot_disk {
           auto_delete = true
           device_name = (known after apply)
           disk_id     = (known after apply)
           mode        = (known after apply)

           initialize_params {
               block_size  = (known after apply)
               description = (known after apply)
               image_id    = "fd8mn5e1cksb3s1pcq12"
               name        = (known after apply)
               size        = (known after apply)
               snapshot_id = (known after apply)
               type        = "network-hdd"
            }
        }

       network_interface {
           index              = (known after apply)
           ip_address         = (known after apply)
           ipv4               = true
           ipv6               = (known after apply)
           ipv6_address       = (known after apply)
           mac_address        = (known after apply)
           nat                = true
           nat_ip_address     = (known after apply)
           nat_ip_version     = (known after apply)
           security_group_ids = (known after apply)
           subnet_id          = (known after apply)
        }

       placement_policy {
           host_affinity_rules = (known after apply)
           placement_group_id  = (known after apply)
        }

       resources {
           core_fraction = 100
           cores         = 2
           memory        = 2
        }

       scheduling_policy {
           preemptible = (known after apply)
        }
    }

  # yandex_compute_instance.vm-count[1] will be created
   resource "yandex_compute_instance" "vm-count" {
       created_at                = (known after apply)
       folder_id                 = (known after apply)
       fqdn                      = (known after apply)
       hostname                  = (known after apply)
       id                        = (known after apply)
       name                      = "vm-1-prod"
       network_acceleration_type = "standard"
       platform_id               = "standard-v1"
       service_account_id        = (known after apply)
       status                    = (known after apply)
       zone                      = (known after apply)

       boot_disk {
           auto_delete = true
           device_name = (known after apply)
           disk_id     = (known after apply)
           mode        = (known after apply)

           initialize_params {
               block_size  = (known after apply)
               description = (known after apply)
               image_id    = "fd8mn5e1cksb3s1pcq12"
               name        = (known after apply)
               size        = (known after apply)
               snapshot_id = (known after apply)
               type        = "network-hdd"
            }
        }

       network_interface {
           index              = (known after apply)
           ip_address         = (known after apply)
           ipv4               = true
           ipv6               = (known after apply)
           ipv6_address       = (known after apply)
           mac_address        = (known after apply)
           nat                = true
           nat_ip_address     = (known after apply)
           nat_ip_version     = (known after apply)
           security_group_ids = (known after apply)
           subnet_id          = (known after apply)
        }

       placement_policy {
           host_affinity_rules = (known after apply)
           placement_group_id  = (known after apply)
        }

       resources {
           core_fraction = 100
           cores         = 2
           memory        = 2
        }

       scheduling_policy {
           preemptible = (known after apply)
        }
    }

  # yandex_compute_instance.vm-foreach["1"] will be created
   resource "yandex_compute_instance" "vm-foreach" {
       created_at                = (known after apply)
       folder_id                 = (known after apply)
       fqdn                      = (known after apply)
       hostname                  = (known after apply)
       id                        = (known after apply)
       name                      = "vm-1-prod"
       network_acceleration_type = "standard"
       platform_id               = "standard-v1"
       service_account_id        = (known after apply)
       status                    = (known after apply)
       zone                      = (known after apply)

       boot_disk {
           auto_delete = true
           device_name = (known after apply)
           disk_id     = (known after apply)
           mode        = (known after apply)

           initialize_params {
               block_size  = (known after apply)
               description = (known after apply)
               image_id    = "fd8mn5e1cksb3s1pcq12"
               name        = (known after apply)
               size        = (known after apply)
               snapshot_id = (known after apply)
               type        = "network-hdd"
            }
        }

       network_interface {
           index              = (known after apply)
           ip_address         = (known after apply)
           ipv4               = true
           ipv6               = (known after apply)
           ipv6_address       = (known after apply)
           mac_address        = (known after apply)
           nat                = true
           nat_ip_address     = (known after apply)
           nat_ip_version     = (known after apply)
           security_group_ids = (known after apply)
           subnet_id          = (known after apply)
        }

       placement_policy {
           host_affinity_rules = (known after apply)
           placement_group_id  = (known after apply)
        }

       resources {
           core_fraction = 100
           cores         = 2
           memory        = 2
        }

       scheduling_policy {
           preemptible = (known after apply)
        }
    }

  # yandex_compute_instance.vm-foreach["2"] will be created
   resource "yandex_compute_instance" "vm-foreach" {
       created_at                = (known after apply)
       folder_id                 = (known after apply)
       fqdn                      = (known after apply)
       hostname                  = (known after apply)
       id                        = (known after apply)
       name                      = "vm-2-prod"
       network_acceleration_type = "standard"
       platform_id               = "standard-v1"
       service_account_id        = (known after apply)
       status                    = (known after apply)
       zone                      = (known after apply)

       boot_disk {
           auto_delete = true
           device_name = (known after apply)
           disk_id     = (known after apply)
           mode        = (known after apply)

           initialize_params {
               block_size  = (known after apply)
               description = (known after apply)
               image_id    = "fd8mn5e1cksb3s1pcq12"
               name        = (known after apply)
               size        = (known after apply)
               snapshot_id = (known after apply)
               type        = "network-hdd"
            }
        }

       network_interface {
           index              = (known after apply)
           ip_address         = (known after apply)
           ipv4               = true
           ipv6               = (known after apply)
           ipv6_address       = (known after apply)
           mac_address        = (known after apply)
           nat                = true
           nat_ip_address     = (known after apply)
           nat_ip_version     = (known after apply)
           security_group_ids = (known after apply)
           subnet_id          = (known after apply)
        }

       placement_policy {
           host_affinity_rules = (known after apply)
           placement_group_id  = (known after apply)
        }

       resources {
           core_fraction = 100
           cores         = 2
           memory        = 2
        }

       scheduling_policy {
           preemptible = (known after apply)
        }
    }

  # yandex_vpc_subnet.subnet will be created
   resource "yandex_vpc_subnet" "subnet" {
       created_at     = (known after apply)
       folder_id      = (known after apply)
       id             = (known after apply)
       labels         = (known after apply)
       name           = "subnet"
       network_id     = "enp8emealeuditarmp90"
       v4_cidr_blocks = [
           "10.2.0.0/16",
        ]
       v6_cidr_blocks = (known after apply)
       zone           = "ru-central1-a"
    }

Plan: 5 to add, 0 to change, 0 to destroy.

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
